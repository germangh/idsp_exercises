%!PS-Adobe-3.0 EPSF-3.0
%%Title: WMF2EPS 1.32  : WMF->EPS conversion for fig2.emf
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 9/15/2008 18:9:20
%%For: gomezher
%%BoundingBox: 56 56 658 123
%%Pages: 1
%%Orientation: Portrait
%%PageOrder: Ascend
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (WMF2EPS Color PS) (2010.0) 2
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 0 0 658 123
%%ViewingOrientation: 1 0 0 1
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 0 123.02362 ] def 
%%EndSetup

%%Page: 1 1
%%PageBoundingBox: 0 0 658 123
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_GdiObject 5.0 0
/SavedCTM null d/CTMsave{/SavedCTM SavedCTM currentmatrix d}b/CTMrestore
{SavedCTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d/Reps
L2?{1}{5}? d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType
1 d/PaintProc{` 1 Lw[]0 sd PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal
{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}b
/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{4 -2 $/yOrg ~ d
/xOrg ~ d GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix xOrg yOrg + mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0
/HS_Horizontal makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal
makehatch}b/h3{/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5
/HS_DiagCross makehatch}b/GDIBWPatternMx null d/pfprep{save 8 1 $
/PatternOfTheDay 8 1 $ GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/yExt
~ d/Width ~ d/BGnd ~ d/FGnd ~ d/Height yExt RepsV mul d/mx[Width 0 0 Height 0
0]d E build_pattern ~ !}b/pfbf{/fEOFill ~ d pfprep hbf fEOFill{O}{L}? restore}b
/GraphInit{GDIHMatrix null eq{/SavedCTM matrix d : ADO_mxRot concat 0 0 snap +
: 0.48 @ GDIHPatternDict ` YStep mul ~ XStep mul ~ nonzero_dsnap YStep V ~
XStep V ~ E +S/GDIHMatrix matrix currentmatrix readonly d ; : 0.24 -0.24 +S
GDIBWPatternDict ` Width Height E nonzero_dsnap +S/GDIBWPatternMx matrix
currentmatrix readonly d ; ;}if}b
%%EndResource
%%BeginResource: file Pscript_Win_GdiObject_L2 5.0 0
/GDIBWPatternDict 25 dict @ `/PatternType 1 d/PaintType 1 d/RepsV 1 d/RepsH 1 d
/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/SetBGndFGnd{BGnd null ne{BGnd aload ! scol BBox aload ! 2 ^ sub ~ 3 ^ sub ~
rf}if FGnd null ne{FGnd aload ! scol}if}b/PaintProc{` SetBGndFGnd RepsH{Width
Height F mx PaintData imagemask Width 0 +}repeat E}b E d/mp/makepattern , d
/build_pattern{CTMsave GDIBWPatternMx setmatrix/nupangle where{! nupangle -90
eq{nupangle R}if}if GDIBWPatternDict @ ` Width Height ne{Width Height gt{Width
Height V 1}{1 Height Width V}? +S}if xOrg yOrg E matrix + mp CTMrestore}b/hbf
{setpattern}b/hf{:/fEOFill ~ d ~ ! setpattern fEOFill{O}{L}? ;}b/pbf{: !
/fEOFill ~ d GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/OutputBPP ~ d
/Height ~ d/Width ~ d/PaintType 1 d/PatternType 1 d/TilingType 1 d/BBox[0 0
Width Height]d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d 20 dict @ `
/ImageType 1 d/Width Width d/Height Height d/ImageMatrix[1 0 0 1 0 0]d
/BitsPerComponent 8 d OutputBPP 24 eq{/Decode[0 1 0 1 0 1]d}{OutputBPP 8 eq{
/Decode[0 1]d}{/Decode[0 1 0 1 0 1 0 1]d}?}?/DataSource{PaintData}d E/ImageDict
~ d/PaintProc{` ImageDict image E}b & mx makepattern setpattern E fEOFill{O}{L}
? ;}b/mask_pbf{:/fEOFill ~ d 20 dict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/Height ~
d/Width ~ d/PatternType 1 d/PaintType 2 d/TilingType 1 d/BBox[0 0 Width Height]
d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d/PaintProc{` Width Height
T 1 1 dtransform abs ~ abs ~ 0 0 3 -1 $ 0 0 6 array astore{PaintData}imagemask
E}b & mx makepattern setpattern E fEOFill{O}{L}? ;}b
%%EndResource
end reinitialize
0 0 0 1 scol 1 Lj 0 Lc solid N 1295 23 M 1295 19 1299 16 1303 16 -c 1953 16 I 1958 16 1961 19 1961 23 -c 1961 523 I 1961 527 1958 531 1953 531 -c 1303 531 I 1299 531 1295 527 1295 523 -c C 
1311 523 M 1303 515 I 1953 515 I 1945 523 I 1945 23 I 1953 31 I 1303 31 I 1311 23 I C 
:  L ; : 0.125 0.121 +S K 
; Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Times-Roman
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_Euro_L2 5.0 0
/UseT3EuroFont{/currentdistillerparams where{pop currentdistillerparams
/CoreDistVersion get 4000 le}{false}ifelse}bind def/NewEuroT3Font?{dup/FontType
get 3 eq{dup/EuroFont known exch/BaseFont known and}{pop false}ifelse}bind def
/T1FontHasEuro{dup/CharStrings known not{dup NewEuroT3Font?{dup/EuroGlyphName
get exch/EuroFont get/CharStrings get exch known{true}{false}ifelse}{pop false}
ifelse}{dup/FontType get 1 eq{/CharStrings get/Euro known}{dup/InfoDict known{
/InfoDict get/Euro known}{/CharStrings get/Euro known}ifelse}ifelse}ifelse}bind
def/FontHasEuro{findfont dup/Blend known{pop true}{T1FontHasEuro}ifelse}bind
def/EuroEncodingIdx 1 def/EuroFontHdr{12 dict begin/FontInfo 10 dict dup begin
/version(001.000)readonly def/Notice(Copyright (c)1999 Adobe Systems
Incorporated. All Rights Reserved.)readonly def/FullName(Euro)readonly def
/FamilyName(Euro)readonly def/Weight(Regular)readonly def/isFixedPitch false
def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 def end
readonly def/FontName/Euro def/Encoding 256 array 0 1 255{1 index exch/.notdef
put}for def/PaintType 0 def/FontType 1 def/FontMatrix[0.001 0 0 0.001 0 0]def
/FontBBox{-25 -23 1500 804}readonly def currentdict end dup/Private 20 dict dup
begin/ND{def}def/NP{put}def/lenIV -1 def/RD{string currentfile exch
readhexstring pop}def/-|{string currentfile exch readstring pop}executeonly def
/|-{def}executeonly def/|{put}executeonly def/BlueValues[-20 0 706 736 547 572]
|-/OtherBlues[-211 -203]|-/BlueScale 0.0312917 def/MinFeature{16 16}|-/StdHW
[60]|-/StdVW[71]|-/ForceBold false def/password 5839 def/Erode{8.5 dup 3 -1
roll 0.1 mul exch 0.5 sub mul cvi sub dup mul 71 0 dtransform dup mul exch dup
mul add le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def/OtherSubrs[{}{}{}
{systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]|-/Subrs 5 array dup 0
<8E8B0C100C110C110C210B>put dup 1<8B8C0C100B>put dup 2<8B8D0C100B>put dup 3<0B>
put dup 4<8E8C8E0C100C110A0B>put |- 2 index/CharStrings 256 dict dup begin
/.notdef<8b8b0d0e>def end end put put dup/FontName get exch definefont pop}bind
def/AddEuroGlyph{2 index exch EuroEncodingIdx 1 eq{EuroFontHdr}if systemdict
begin/Euro findfont dup dup/Encoding get 5 1 roll/Private get begin/CharStrings
get dup 3 index known{pop pop pop pop end end}{begin 1 index exch def end end
end EuroEncodingIdx dup 1 add/EuroEncodingIdx exch def exch put}ifelse}bind def
/GetNewXUID{currentdict/XUID known{[7 XUID aload pop]true}{currentdict/UniqueID
known{[7 UniqueID]true}{false}ifelse}ifelse}bind def/BuildT3EuroFont{exch 16
dict begin dup/FontName exch def findfont dup/Encoding get/Encoding exch def
dup length 1 add dict copy dup/FID undef begin dup dup/FontName exch def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for def GetNewXUID{/XUID
exch def}if currentdict end definefont pop/BaseFont exch findfont 1000
scalefont def/EuroFont exch findfont 1000 scalefont def pop/EuroGlyphName exch
def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox BaseFont/FontBBox
get def/Char 1 string def/BuildChar{exch dup begin/Encoding get 1 index get
/Euro eq{BaseFont T1FontHasEuro{false}{true}ifelse}{false}ifelse{EuroFont
setfont pop userdict/Idx 0 put EuroFont/Encoding get{EuroGlyphName eq{exit}
{userdict/Idx Idx 1 add put}ifelse}forall userdict/Idx get}{dup dup Encoding
exch get BaseFont/Encoding get 3 1 roll put BaseFont setfont}ifelse Char 0 3 -1
roll put Char stringwidth newpath 0 0 moveto Char true charpath flattenpath
pathbbox setcachedevice 0 0 moveto Char show end}bind def currentdict end dup
/FontName get exch definefont pop}bind def/AddEuroToT1Font{dup findfont dup
length 10 add dict copy dup/FID undef begin/EuroFont 3 -1 roll findfont 1000
scalefont def CharStrings dup length 1 add dict copy begin/Euro{EuroFont
setfont pop EuroGBBox aload pop setcachedevice 0 0 moveto EuroGName glyphshow}
bind def currentdict end/CharStrings exch def GetNewXUID{/XUID exch def}if 3 1
roll/EuroGBBox exch def/EuroGName exch def currentdict end definefont pop}bind
def/BuildNewFont{UseT3EuroFont{BuildT3EuroFont}{pop AddEuroToT1Font}ifelse}bind
def/UseObliqueEuro{findfont/FontMatrix get dup 2 get 0 eq exch dup 0 get exch 3
get eq and UseT3EuroFont or}bind def
%%EndResource
end reinitialize
/Times-Roman FontHasEuro not
{
/Euro.Times-Roman
 [500 0 24 -14 493 676 ] 
<A3F8880DC0EB03F854F743950C0C037DA501F7A0BB01F805BB01F91EA501F869F8911584
F73A0576068478827E7F8B087F8B70AC438B082A8BFB0D6471FB700863067C5B05BE068A
7E8B878B7D08750764067D5B05C206A0FB7BF71858E88B088F0AC0EB03F84BF789950C0C
037DA501F7A0BB01F805BB01F91EA501CA8BACAC998B08988B95809076088F0AC0EB03F8
54F743950C0C037DA501F7A0BB01F805BB01F91EA501A00692F73705750675FB09417667
8B083A8B43C182F75E08F7740699BB05FB84069C078B978C978B9708F7950699BB05FBA1
069AF755D5B3D18B08AB8BDD71A2FB0708090E>
AddEuroGlyph
/Euro /Times-Roman /Times-Roman-Copy BuildNewFont
} if
F /F0 0 /256 T /Times-Roman mF 
/F0S86YFFFFFF7A F0 [134.051 0 0 -133.781 0 0 ] mFS
F0S86YFFFFFF7A Ji 
1499 243 M (Ideal )[40 68 58 60 36  0]xS 
1419 402 M (sampler)[52 60 104 68 36 58  0]xS 
N 3796 23 M 3796 19 3800 16 3804 16 -c 4654 16 I 4659 16 4662 19 4662 23 -c 4662 523 I 4662 527 4659 531 4654 531 -c 3804 531 I 3800 531 3796 527 3796 523 -c C 
3812 523 M 3804 515 I 4654 515 I 4646 523 I 4646 23 I 4654 31 I 3804 31 I 3812 23 I C 
:  L ; : 0.25 0.246 +S K 
; 4100 243 M (Ideal )[40 68 58 60 36  0]xS 
3918 402 M (interpolator)[38 68 38 58 44 68 66 36 60 38 66  0]xS 
N 2445 23 M 2445 19 2449 16 2453 16 -c 3304 16 I 3308 16 3312 19 3312 23 -c 3312 523 I 3312 527 3308 531 3304 531 -c 2453 531 I 2449 531 2445 527 2445 523 -c C 
2461 523 M 2453 515 I 3304 515 I 3296 523 I 3296 23 I 3304 31 I 2453 31 I 2461 23 I C 
:  L ; : 0.125 0.121 +S K 
; 2717 323 M (H\(e)[96 44  0]xS 
/F0S58YFFFFFFA8 F0 [88.031 0 0 -87.855 0 0 ] mFS
F0S58YFFFFFFA8 Ji 
2915 283 M (j)S 
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_T3Hdr 5.0 0
{version cvi 2016 ge{32/FontType resourcestatus{pop pop true}{false}ifelse}
{false}ifelse}exec/Is2016andT32? exch def/T32DefSBCMap{/CIDInit/ProcSet
findresource begin 10 dict begin begincmap/CIDSystemInfo 3 dict dup begin
/Registry(Adobe)def/Ordering(Identity1)def/Supplement 0 def end def/CMapType 0
def/WMode 0 def 1 begincodespacerange<00><ff>endcodespacerange 1 begincidrange
<00><ff>0 endcidrange endcmap/DrvSBCMap currentdict/CMap defineresource pop end
end}bind def Is2016andT32?{T32DefSBCMap}def/T32RsrcBegin{Is2016andT32?{
/BitmapFontInit/ProcSet findresource begin}if}bind def/T32RsrcEnd{Is2016andT32?
{end}if}bind def/AddT32Char{6 1 roll 0 get 7 1 roll pop pop 5 1 roll pop
findfont/TT32R get addglyph}bind def/AddT3Char{findfont dup 5 2 roll 1 index
length 0 gt{cvx 1 index exch 4 exch put dup(imagemask)cvx cvn 5 exch put cvx}
{pop cvx}ifelse 3 -1 roll/CharProcs get 3 1 roll put dup/Encoding get 5 -1 roll
4 index put/Metrics get 3 1 roll put}bind def/AddT3T32Char Is2016andT32?{
/AddT32Char}{/AddT3Char}ifelse load def/GreNewFontT32{5 dict begin exch
/FontMatrix exch def exch/FontBBox exch def exch pop exch pop/CIDFontType 4 def
dup currentdict end/CIDFont defineresource 3 -1 roll dup/DrvSBCMap dup/CMap
resourcestatus{pop pop}{T32DefSBCMap}ifelse 5 -1 roll[exch]composefont dup
length dict copy dup/FID undef begin exch/TT32R exch def currentdict end
definefont/BitmapFontInit/ProcSet findresource begin/TT32R get[14 0 0 0 0 0]<>0
4 -1 roll addglyph end}bind def/GreNewFontT3{11 dict begin pop/FontType 3 def
/FontMatrix exch def/FontBBox exch def/Encoding exch def/CharProcs 257 dict def
CharProcs/.notdef{}put/Metrics 257 dict def Metrics/.notdef 3 -1 roll put
AddFontInfoBegin AddFontInfo AddFontInfoEnd/BuildChar{userdict begin/char exch
def dup/charname exch/Encoding get char get def dup/Metrics get charname 2 copy
known{get aload pop}{pop/.notdef get aload pop}ifelse setcachedevice begin
Encoding char get CharProcs exch 2 copy known{get}{pop/.notdef get}ifelse end
exec end}def currentdict end definefont pop}bind def/GreNewFont{Is2016andT32?
{GreNewFontT32}{GreNewFontT3}ifelse}bind def/UDF3{Is2016andT32?{/BitmapFontInit
/ProcSet findresource begin dup/CIDFont findresource removeall/CIDFont
undefineresource undefinefont end}{pop UDF}ifelse}bind def
%%EndResource
end reinitialize
/TT2425b00
[87 0 0 0 0 0 ] 
 256 array 0 1 255 {1 index exch /.notdef put} for 
[0 0 0 0 ] 
[1 87 div 0 0 -1 87 div 0 0 ]
/__TT2425b00
GreNewFont
T32RsrcBegin

1
/omega [58 0 3 -41 54 1 ] 
/omega [51 42 true [1 0 0 1 -3 41 ]  0 0]
[<~!!2isn,NFg&,68+!!!!`J,k(L!!)uu!"[uf!W2ot#Oh]qp](9rp](Qg!!!&t
!"[uf!!)uu&)[HW!<)s?^]F31IfM^K!VcYEJ3SPbp]*O/5C`k6!'c!`J-5]L
5JVc!"8i-`^jc=dqu@hSrr<0!!$C/!!!E-!+5m/!"8i-@i;WcZqu@hsrr<0!
!$C/!!!E-!+5m/!"8Dj<i;WcXp])Dorr<)p!$C/!!!2ip+5m/!!:Tt1i;WcW
n,OQgIfKK,!$C-K!!$C,+2EAV!8miA^jgk7n,P\g5C`b'!'buuJ-":&5Caik
!S@C%J02Q/S,e$=&)[\Q!<)s'n.,a)qu?is4pQ`8!!3,t"97ij!.XbDs53kW
+2@k@J,f~>
 ]
/TT2425b00 AddT3T32Char
T32RsrcEnd
F /F1 0 /0 F /TT2425b00 mF 
/F1S58 F1 [88.02 0 0 -88.02 0 0 ] mFS
F1S58 Ji 
2939 283 M <01>S 
F0S86YFFFFFF7A Ji 
2997 323 M (\))S 
N 1953 267 M 2442 268 I 2441 280 I 1953 279 I C 
2395 240 M 2453 274 I 2394 308 I 2392 310 2388 309 2386 306 -c 2385 303 2386 300 2388 298 -c 2438 269 I 2438 279 I 2389 250 I 2386 248 2385 245 2386 242 -c 2388 239 2392 238 2395 240 -c C 
:  L ; : 0.125 0.121 +S K 
; N 3304 267 M 3792 268 I 3792 280 I 3304 279 I C 
3745 240 M 3804 274 I 3745 308 I 3742 310 3738 309 3737 306 -c 3735 303 3736 300 3739 298 -c 3789 269 I 3789 279 I 3739 250 I 3736 248 3735 245 3737 242 -c 3739 239 3742 238 3745 240 -c C 
:  L ; : 0.125 0.121 +S K 
; N 903 267 M 1291 268 I 1291 280 I 903 279 I C 
1244 240 M 1303 274 I 1244 308 I 1241 310 1237 309 1236 306 -c 1234 303 1235 300 1238 298 -c 1288 269 I 1288 279 I 1238 250 I 1235 248 1234 245 1236 242 -c 1238 239 1241 238 1244 240 -c C 
:  L ; : 0.125 0.121 +S K 
; N 4654 267 M 5043 268 I 5043 280 I 4654 279 I C 
4996 240 M 5055 274 I 4996 308 I 4993 310 4989 309 4987 306 -c 4986 303 4987 300 4990 298 -c 5040 269 I 5040 279 I 4990 250 I 4987 248 4986 245 4988 242 -c 4989 239 4993 238 4996 240 -c C 
:  L ; : 0.25 0.246 +S K 
; 11 dict begin
/FontName /TT2426o00 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
AddFontInfoBegin
AddFontInfo
AddFontInfoEnd
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/g454 274 RD 
b4fa0b0df9adb71591808e848b85088b848886848708858781887e8a087f
897a8b758b08788b7b8b7f8c087f8c828c848e08848d858d889008888e88
8f889008fb6cf7fa05fb6bfbfa0588868887878808888685898489088488
838a7f8a08808a7b8b798b08788b7b8b7f8d087f8c818e868f08858f8990
8b92088b918e92909608f7adf84c05fb9df83b05869388938a92088b918e
90929008918f958e988d08978c9c8ba18c089e8a9b8b978a089789938a92
890892898f888e89088f878e878e8708f761fbe305f764f7e3058d8e8e8f
8e8f088f8d908e908e08918c938d958d08958c998b9d8c089f8a9b8b978a
089789948891880891878e868a85088b848882858208fb9cfc3605f7aafc
5105090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/TT2426o00 findfont /Encoding get
dup 1 /g454 put
pop
 /TT2426o00 /Font G2UBegin
/g454 <0078> def
G2UEnd
F /F2 0 /0 F /TT2426o00 mF 
/F2S96YFFFFFF6A F2 [150.059 0 0 -149.754 0 0 ] mFS
F2S96YFFFFFF6A Ji 
564 295 M <01>S 
11 dict begin
/FontName /TT2427o00 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
AddFontInfoBegin
AddFontInfo
AddFontInfoEnd
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/lenIV -1 def
/RD {string currentfile exch readhexstring pop} def

2 index /CharStrings 256 dict dup begin
/.notdef 4 RD 
8b8b0d0e ND 
/g258 353 RD 
ddfa6b0df980a2158b8289858688088686838a81880882897d8b798b087a
8b7d8b818d08818e848c869008868e88918b9408e607655f606a5a74085a
745881548b085d8b609064980865966b9d70a20870a277a87bad087cac83
b38bb8088bbc95b6a0b2089fb0aaaab1a408b2a4ba9dc39808c496c992d1
8c08f71006d1078bad88a983a60884a57fa27b9d087a9d75987295087193
6b90658c08628a67866a82086b816e7f738108737e76817b82087b807f86
838d088689868d878d08878e878f899108889088918a94088a938a948b97
088b9a8c988d95088e94909494950894939a95a19808a295a597a79508a7
94ab93ac9108ae90ad8fae8c08cb8ac284b97c08b97caf77a76e08a76f9e
679862089860915a8b5508fcf507fb37f83015fb21065d8963876a85086a
837080757b08757c7b79807708817586728b72088b5a9a66a97008a86fb4
7ec18c08b68ab395b0a208b0a0b2adb4ba08f75307090e ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/TT2427o00 findfont /Encoding get
dup 1 /g258 put
pop
 /TT2427o00 /Font G2UBegin
/g258 <0061> def
G2UEnd
F /F3 0 /0 F /TT2427o00 mF 
/F3S64YFFFFFF9C F3 [100.039 0 0 -99.836 0 0 ] mFS
F3S64YFFFFFF9C Ji 
626 330 M <01>S 

systemdict begin
/TT2426o00 
findfont dup
/Private get begin
/CharStrings get begin
/g894 225 RD 
f71df9080df7faff00000563154cfb1b5bfb1d6cfb21086cfb227bfb228b
fb22088bfb249bfb23abfb2008abfb20bafb1fc6fb1b088f838d848b8608
8b85898586880887888488818908828a7e8a7a8b087f8b818b828c08838c
838c848d08858d868d878e08878d888f888e0867cf6ccf70d1086fd174d1
79d40878d37dd482d60881d486d68bd7088bd591d595d50896d49ad49ed4
089ed2a2d3a6d208a6d1aad0acd1088d8c8d8e8d8e088f8c8f8d908e0890
8c938c948d08958c968c9a8b089a8b97899589089489938890880890888e
878b86088c858a858985088b06090e ND 
/g410 316 RD 
a6f93e0df8e5e6158b768a7c898008887f87838686088686828681860881
867e887d88087e887c887c89087b8a7c8a7c8b085d8b63916997086a9770
9d75a40876a47cab80b20882b186b88bc008f8a307fb1206808b84908596
088595879c8ba4088b978c958d95088d938d928e91088e908f8f8f8e088f
8d8f8c918c08f71106f76b078b8e8d8f8c90088e8e8f8f918f08928d948d
958d08968c988b9b8c089c8a998b958a0896899389918908918790878d88
088e868c878b8808fb6b07f77b06908a908a8e890890888e878e86088f85
8d848b83088d818b818b7f088b72897a85810885808386818b08fb7b06fc
8b078b4c945c9d6c089e6aab7cbb8c089a8a998c978e08978e968e948f08
958e928f928e08928e908c908c088f8a8e8a8e8a088f898c888d86088d86
8d848b84088d828b828b80088b06090e ND 
/g895 214 RD 
f70ff9080df7fff8ae158b3f874082420882407d42784308784275457045
086f456c4767470889888887868908888886898489088589838a838a0882
8a808b7f8b087a8b7f8c808c08828d848e878e08878e89918b91088b908d
928e9308c8f71bb9f71eabf72108abf7209af7238bf724088bf7227cf722
6bf722086bf7215df71d4bf71b088a918a918b91088c908e8f908e08908e
938e948d08958d978d998b089a8b978a948a089489938a908a0891888f89
8e8a088e888c888d8a08cffb1ec1fb21b2fb2408b2fb259efb278bfb2908
8b06090e ND 
end end
end
/TT2426o00 findfont /Encoding get
dup 2 /g894 put
dup 3 /g410 put
dup 4 /g895 put
pop
 /TT2426o00 /Font G2UBegin
/g894 <0028> def
/g410 <0074> def
/g895 <0029> def
G2UEnd
F2S96YFFFFFF6A Ji 
674 295 M <020304>[46 50  0]xS 
2065 195 M <01>S 

systemdict begin
/TT2426o00 
findfont dup
/Private get begin
/CharStrings get begin
/g896 178 RD 
f753f9080df7effb99158b758a7b85820886838586808b08fb9406848b83
8c838e08858d848f85900885908693879308889488978b9908ff0000062d
078b978e958e94088f9490939191089190928f918e08938c938d928c08f7
9406908a8f8a8e89088f898e878e86088e858d848c85088c828b828b8008
8b758a7c85820886818587808c08fb3706fffffffa3907f73706908b8f89
8e8a088f898e878e86088e868d858c83088c848b818b80088b06090e ND 
/g374 278 RD 
f72afaca0df99da4158b858a86898808888787878589088588838a7f8a08
81897e8b7a8b087b8b7d8b808d08818c838c858e08858d868f898f08888e
8a908b9108f8a4078bbd87b483ab0883aa7fa67ca2087ba1789d72970873
976f916b8c08628a617d626e08626d5f605d5308fd0a078b858a86898808
888787878589088588838a808a0880897e8b7a8b087b8b7e8b808d08808c
838c848e08858d878f888f08898e8a908b9108fa19078b908c8f8d8f088d
8f8f8d918f08918d938d948d08948c978b9b8c089a8a978b948a08968992
8990890890878f898e87088d878c878b8608fb0b07bec3beb4bda608bda4
bd99bf8c08c68abe81b47708b477ac6fa46908a5699d63965d08965d9055
8b4b08fcb907090e ND 
/g897 175 RD 
ebf9080df7eafb8e158b7d897f8882088783868385860885868487848908
8388838a838b08fb9306828b83908693088694899b8ba1088b968b958c92
088d938d918d90088e908e8f8f8d088e8c8f8d908b08f73706ff000005c7
07fb3706828a838f8695088694899a8ba1088b968b948c94088d918d928d
91088e908e8f8f8d088e8d8f8c908c08f79306938a9389938a0892889287
918608918590838f82088e828d818b7f08fffffff9d307090e ND 
end end
end
/TT2426o00 findfont /Encoding get
dup 5 /g896 put
dup 6 /g374 put
dup 7 /g897 put
pop
 /TT2426o00 /Font G2UBegin
/g896 <005B> def
/g374 <006E> def
/g897 <005D> def
G2UEnd
2151 195 M <050607>[46 78  0]xS 

systemdict begin
/TT2426o00 
findfont dup
/Private get begin
/CharStrings get begin
/g455 202 RD 
a6fa340df8ab16fb0bfbe005878081837a86087b8572886a8b087a8b7c8c
818d08818c828e858f08868f88908a92088a918d938f9508f710f7ce0585
8d858e86920886908792899308fbd5f9f105869987958b94088b928f9190
90089090938e978d08978d9c8b9f8c08a08a9a8b968a0897899389928a08
92878f888f86088e858e858d8308f796fd67058d06f78df96b058f979093
908f08918f948d968d08978d9b8b9f8c089e8a9b8b968908978995889086
0891868d858b84088b828a82867f08fbd7fe1405090e ND 
end end
end
/TT2426o00 findfont /Encoding get
dup 8 /g455 put
pop
 /TT2426o00 /Font G2UBegin
/g455 <0079> def
G2UEnd
3365 195 M <08>S 
3453 195 M <050607>[46 78  0]xS 
5116 295 M <08>S 
F3S64YFFFFFF9C Ji 
5182 330 M <01>S 
F2S96YFFFFFF6A Ji 
5230 295 M <02>S 
5276 295 M <03>S  5326 295 M <04>S  
LH
%%PageTrailer

%%Trailer
%%DocumentNeededResources: 
%%+ font Times-Roman
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_Win_GdiObject 5.0 0
%%+ procset Pscript_Win_GdiObject_L2 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
%%+ procset Pscript_Win_Euro_L2 5.0 0
%%+ procset Pscript_T3Hdr 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
%%EOF
